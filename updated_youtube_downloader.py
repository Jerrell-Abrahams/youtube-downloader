# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'updated_youtube_downloader.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.



from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QApplication

from Downloader import Downloader




class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("YouTube Downloader")
        MainWindow.setEnabled(True)
        MainWindow.resize(944, 559)
        MainWindow.setStyleSheet("")
        MainWindow.setTabShape(QtWidgets.QTabWidget.Rounded)
        MainWindow.setWindowFlags(QtCore.Qt.FramelessWindowHint)
        MainWindow.setAttribute(QtCore.Qt.WA_TranslucentBackground)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.widget = QtWidgets.QWidget(self.centralwidget)
        self.widget.setEnabled(True)
        self.widget.setGeometry(QtCore.QRect(90, 30, 731, 361))
        self.widget.setStyleSheet("QWidget#widget{\n"
"    background-color: black;\n"
"    border-top-left-radius: 50px;\n"
"    border-bottom-right-radius: 50px;\n"
"\n"
"}\n"
"\n"
"QPushButton#downloadButton{\n"
"    color: white;\n"
"    background-color: black;\n"
"    border: 1px solid white;\n"
"    border-radius: 5px;\n"
"}\n"
"\n"
"QPushButton#downloadButton:hover{\n"
"    background-color: white;\n"
"    color: black;\n"
"    border: 2px solid white;\n"
"}\n"
"QPushButton#downloadButton:pressed{\n"
"\n"
"    background-color:rgba(255, 5, 42);\n"
"    color: white;\n"
"}\n"
"\n"
"QLabel{\n"
"    color: white;\n"
"}\n"
"QLineEdit{\n"
"    background-color: white;\n"
"    border-radius: 20px;\n"
"    background-color: white;\n"
"}\n"
"\n"
"QRadioButton::indicator{\n"
"    background-color: white;\n"
"    border-radius: 5px;\n"
"}\n"
"\n"
"QRadioButton::indicator:checked{\n"
"    background-color: red;\n"
"    border-radius: 5px;\n"
"    border: 2px solid white;\n"
"}\n"
"\n"
"\n"
"")
        self.widget.setObjectName("widget")
        self.widget.setGraphicsEffect(QtWidgets.QGraphicsDropShadowEffect(blurRadius=40, xOffset=1, yOffset=1))
        self.downloadButton = QtWidgets.QPushButton(self.widget)
        self.downloadButton.setGeometry(QtCore.QRect(300, 240, 121, 31))
        self.downloadButton.setStyleSheet("")
        self.downloadButton.setObjectName("downloadButton")
        
        
        
        self.downloadButton.clicked.connect(self.downloadButtonPressed)
        
        self.label = QtWidgets.QLabel(self.widget)
        self.label.setGeometry(QtCore.QRect(230, 20, 291, 51))
        font = QtGui.QFont()
        font.setFamily("Segoe UI Black")
        font.setPointSize(16)
        font.setBold(True)
        font.setWeight(75)
        self.label.setFont(font)
        self.label.setStyleSheet("color: red;\n"
"\n"
"")
        self.label.setObjectName("label")
        self.comboBox = QtWidgets.QComboBox(self.widget)
        self.comboBox.setGeometry(QtCore.QRect(450, 160, 101, 21))
        self.comboBox.setStyleSheet("border: 2px solid black;\n"
"border-radius: 3px;\n"
"border: 1px solid white;\n"
"background-color: black;\n"
"color: white;\n"
"\n"
"\n"
"\n"
"")
        self.comboBox.setObjectName("comboBox")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.label_2 = QtWidgets.QLabel(self.widget)
        self.label_2.setGeometry(QtCore.QRect(226, 110, 71, 16))
        self.label_2.setObjectName("label_2")
        self.label_3 = QtWidgets.QLabel(self.widget)
        self.label_3.setGeometry(QtCore.QRect(226, 160, 71, 21))
        self.label_3.setObjectName("label_3")
        self.linkText = QtWidgets.QLineEdit(self.widget)
        self.linkText.setGeometry(QtCore.QRect(306, 101, 221, 31))
        self.linkText.setStyleSheet("color: white;\n"
"border:none;\n"
"background-color: transparent;\n"
"border-bottom:1px solid white;\n"
"\n"
"\n"
"\n"
"\n"
"")
        self.linkText.setText("")
        self.linkText.setObjectName("linkText")
        self.radioButton = QtWidgets.QRadioButton(self.widget)
        self.radioButton.setGeometry(QtCore.QRect(300, 160, 131, 20))
        self.radioButton.setStyleSheet("color: white;\n"
"")
        self.radioButton.setObjectName("radioButton")
        self.line = QtWidgets.QFrame(self.widget)
        self.line.setGeometry(QtCore.QRect(40, 54, 20, 251))
        self.line.setFrameShape(QtWidgets.QFrame.VLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.line_2 = QtWidgets.QFrame(self.widget)
        self.line_2.setGeometry(QtCore.QRect(60, 95, 20, 171))
        self.line_2.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_2.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_2.setObjectName("line_2")
        self.line_3 = QtWidgets.QFrame(self.widget)
        self.line_3.setGeometry(QtCore.QRect(80, 136, 20, 91))
        self.line_3.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_3.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_3.setObjectName("line_3")

        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 944, 26))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.downloadButton.setText(_translate("MainWindow", "Download"))
        self.label.setText(_translate("MainWindow", "YouTube Downloader"))
        self.comboBox.setItemText(0, _translate("MainWindow", "Audio only"))
        self.comboBox.setItemText(1, _translate("MainWindow", "360p"))
        self.comboBox.setItemText(2, _translate("MainWindow", "720p"))
        self.label_2.setText(_translate("MainWindow", "Video URL:"))
        self.label_3.setText(_translate("MainWindow", "Resolution:"))
        self.linkText.setPlaceholderText(_translate("MainWindow", "Video link"))
        self.radioButton.setText(_translate("MainWindow", "Highest resolution"))

    ########################################################
    def downloadButtonPressed(self):
        url = self.linkText.text()
        self.youtube = Downloader(url)
        
        try: 
            path = QtWidgets.QFileDialog.getExistingDirectory(self.centralwidget)
            QApplication.processEvents()

        except (Exception):
            self.downloadButtonPressed()

        radioButton = self.radioButton
        comboBox = self.comboBox.itemText(0)
    

        if radioButton.isChecked():
            res = self.youtube.get_highest_resolution()
            self.youtube.download_video(location=str(path), resolution=str(res))
            QApplication.processEvents()
            self.linkText.setText("")
            
        elif comboBox == "Audio only":
            self.youtube.download_audio_only(location=str(path))
            QApplication.processEvents()
            self.linkText.setText("")
        
        elif comboBox == "720p":
            self.youtube.download_video(location=str(path), resolution="720p")
            QApplication.processEvents()
            self.linkText.setText("")
        
        if comboBox == "360p":
            self.youtube.download_video(location=str(path), resolution="360p")
            QApplication.processEvents() 
            self.linkText.setText("")

        
        

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
